{
  "version": 3,
  "sources": ["../../../../../node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js"],
  "sourcesContent": ["import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), sources = _a.args, keys = _a.keys;\n    var result = new Observable(function (subscriber) {\n        var length = sources.length;\n        if (!length) {\n            subscriber.complete();\n            return;\n        }\n        var values = new Array(length);\n        var remainingCompletions = length;\n        var remainingEmissions = length;\n        var _loop_1 = function (sourceIndex) {\n            var hasValue = false;\n            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (!hasValue) {\n                    hasValue = true;\n                    remainingEmissions--;\n                }\n                values[sourceIndex] = value;\n            }, function () { return remainingCompletions--; }, undefined, function () {\n                if (!remainingCompletions || !hasValue) {\n                    if (!remainingEmissions) {\n                        subscriber.next(keys ? createObject(keys, values) : values);\n                    }\n                    subscriber.complete();\n                }\n            }));\n        };\n        for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n            _loop_1(sourceIndex);\n        }\n    });\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n"],
  "mappings": ";;;;;;;;;;;AAOO,SAAS,WAAW;AACvB,MAAI,OAAO,CAAC;AACZ,WAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,SAAK,EAAE,IAAI,UAAU,EAAE;AAAA,EAC3B;AACA,MAAI,iBAAiB,kBAAkB,IAAI;AAC3C,MAAI,KAAK,qBAAqB,IAAI,GAAG,UAAU,GAAG,MAAM,OAAO,GAAG;AAClE,MAAI,SAAS,IAAI,WAAW,SAAU,YAAY;AAC9C,QAAI,SAAS,QAAQ;AACrB,QAAI,CAAC,QAAQ;AACT,iBAAW,SAAS;AACpB;AAAA,IACJ;AACA,QAAI,SAAS,IAAI,MAAM,MAAM;AAC7B,QAAI,uBAAuB;AAC3B,QAAI,qBAAqB;AACzB,QAAI,UAAU,SAAUA,cAAa;AACjC,UAAI,WAAW;AACf,gBAAU,QAAQA,YAAW,CAAC,EAAE,UAAU,yBAAyB,YAAY,SAAU,OAAO;AAC5F,YAAI,CAAC,UAAU;AACX,qBAAW;AACX;AAAA,QACJ;AACA,eAAOA,YAAW,IAAI;AAAA,MAC1B,GAAG,WAAY;AAAE,eAAO;AAAA,MAAwB,GAAG,QAAW,WAAY;AACtE,YAAI,CAAC,wBAAwB,CAAC,UAAU;AACpC,cAAI,CAAC,oBAAoB;AACrB,uBAAW,KAAK,OAAO,aAAa,MAAM,MAAM,IAAI,MAAM;AAAA,UAC9D;AACA,qBAAW,SAAS;AAAA,QACxB;AAAA,MACJ,CAAC,CAAC;AAAA,IACN;AACA,aAAS,cAAc,GAAG,cAAc,QAAQ,eAAe;AAC3D,cAAQ,WAAW;AAAA,IACvB;AAAA,EACJ,CAAC;AACD,SAAO,iBAAiB,OAAO,KAAK,iBAAiB,cAAc,CAAC,IAAI;AAC5E;",
  "names": ["sourceIndex"]
}
